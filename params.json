{"name":"fission-router","tagline":"A declarative layer on top of react-router with some other nice-to-haves","body":"# fission-router\r\n\r\n## Information\r\n\r\n<table>\r\n<tr>\r\n<td>Node Version</td>\r\n<td>>= 0.10</td>\r\n</tr>\r\n</table>\r\n\r\n## Usage\r\n\r\n## Install\r\n\r\n```\r\nnpm install fission-router --save\r\n```\r\n## Example\r\n\r\n```js\r\nvar Router = require('fission-router');\r\n\r\nvar appRouter = Router({\r\n  // Route = /\r\n  splash: {\r\n    path: '/',\r\n    view: SomeReactComponent\r\n  },\r\n  // Route = /login\r\n  login: {\r\n    path: 'login',\r\n    view: SomeReactComponent\r\n  },\r\n  // Route = /home\r\n  home: {\r\n    path: 'home',\r\n    view: SomeReactComponent,\r\n    children: {\r\n      // Route = /home, this is a subview of home\r\n      dashboard: {\r\n        default: true,\r\n        view: SomeReactComponent\r\n      },\r\n      // Route = /home/statistics, this is a subview of home\r\n      stats: {\r\n        path: 'statistics',\r\n        view: SomeReactComponent\r\n      },\r\n      // Route = /home/job/123, this is a subview of home\r\n      job: {\r\n        path: 'job/:jobId',\r\n        view: SomeReactComponent\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nappRouter.start(document.body);\r\n```\r\n\r\n## Differences\r\n\r\nreact-router is great but I don't like JSX and wanted a simpler API. This module provides a small wrapper that gives you the ability to provide an object with your route info instead of using JSX, renames a few things, and moves some stuff around.\r\n\r\n## Documentation\r\n\r\nYou should read the react-router documentation to get a full understanding of how this all works. This documentation is a very basic API overview of stuff that was changed.\r\n\r\n### Router(config[, options])\r\n\r\nThis returns a react router object, but with no `.run`. You can expect the same methods (transitionTo, replaceWith, etc.) that exist in react-router to exist on this object too.\r\n\r\n#### Config format\r\n\r\nThe key of this object should be a unique name to describe the route.\r\n\r\n- path\r\n  - Optional string describing the path needed to activate the route\r\n  - Path is relative to the parent path\r\n- view\r\n  - Required component function that you want rendered when the route is activated\r\n- default\r\n  - If this is the default view or not. Useful when you have a set of children, where one is activated by default. If unspecified this value will be false.\r\n- children\r\n  - optional object of child routes\r\n\r\nIf a route has no options that need to be specified then you can also just give the function like so:\r\n\r\n```js\r\nchildren: {\r\n  home: HomeView\r\n}\r\n```\r\n\r\nwhich is just sugar for\r\n\r\n```js\r\nchildren: {\r\n  home: {\r\n    view: HomeView\r\n  }\r\n}\r\n```\r\n\r\n##### Possible options\r\n\r\n- location\r\n  - A [Router Location Implementation](#router-locations)\r\n  - Defaults to `Router.locations.History`\r\n  - Can also be a string for testing\r\n- Anything else [react-router.create](https://github.com/rackt/react-router/blob/master/docs/api/create.md) takes\r\n\r\n\r\n### Router#start(renderNode)\r\n\r\nStarts listening to changes and renders active view to the given renderNode. renderNode must be a valid HTML element.\r\n\r\n```js\r\nvar router = Router({\r\n  // ... some route config\r\n});\r\nrouter.start(document.body);\r\n```\r\n\r\n### Router#stop()\r\n\r\nStops listening for changes from the location implementation.\r\n\r\nThis will start, render, then stop the router.\r\n```js\r\nvar router = Router({\r\n  // ... some route config\r\n});\r\nrouter.start(document.body);\r\nrouter.stop();\r\n```\r\n\r\n### Router.ChildView\r\n\r\nIf you have a child route that is active, this is a component that represents that.\r\n\r\nPointer to [react-router.Routeview](https://github.com/rackt/react-router/blob/master/docs/api/components/Routeview.md)\r\n\r\n### Router Locations\r\n\r\nThese are all [location implementations from react-router](https://github.com/rackt/react-router/blob/master/docs/api/misc/Location.md)\r\n\r\n#### Router.locations.History\r\n\r\nUses HTML5 History API to provide location information. Pointer to [react-router.HistoryLocation](https://github.com/rackt/react-router/blob/master/locations/HistoryLocation.js).\r\n\r\n#### Router.locations.Hash\r\n\r\nUses URL Hashbangs to provide location information. Pointer to [react-router.HashLocation](https://github.com/rackt/react-router/blob/master/locations/HashLocation.js).\r\n\r\n#### Router.locations.Refresh\r\n\r\nUses full page refreshes. This is a fallback for when you don't want to use hashbangs (ugly) but you can't use the History implementation (browser support), you can use this. Pointer to [react-router.RefreshLocation](https://github.com/rackt/react-router/blob/master/locations/RefreshLocation.js).\r\n\r\n### View Mixins\r\n\r\n#### Router.mixins.State\r\n\r\nPointer to [react-router.State](https://github.com/rackt/react-router/blob/master/docs/api/mixins/State.md).\r\n\r\nProvides some utilities for getting the current state of the router from the view it is mixed into.\r\n\r\n#### Router.mixins.Navigation\r\n\r\nPointer to [react-router.Navigation](https://github.com/rackt/react-router/blob/master/docs/api/mixins/Navigation.md).\r\n\r\nProvides some utilities for linking to, triggering, and sending data to other routes to the view it is mixed into.\r\n\r\n### Server-side rendering\r\n\r\nIs supported. Docs coming soon.\r\n\r\n## LICENSE\r\n\r\n(MIT License)\r\n\r\nCopyright (c) 2015 Fractal <contact@wearefractal.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n[gittip-url]: https://www.gittip.com/wearefractal/\r\n[gittip-image]: http://img.shields.io/gittip/wearefractal.svg\r\n\r\n[downloads-image]: http://img.shields.io/npm/dm/fission-router.svg\r\n[npm-url]: https://npmjs.org/package/fission-router\r\n[npm-image]: http://img.shields.io/npm/v/fission-router.svg\r\n\r\n[travis-url]: https://travis-ci.org/fissionjs/fission-router\r\n[travis-image]: https://travis-ci.org/fissionjs/fission-router.png?branch=master\r\n\r\n[coveralls-url]: https://coveralls.io/r/fissionjs/fission-router\r\n[coveralls-image]: https://coveralls.io/repos/fissionjs/fission-router/badge.png\r\n\r\n[depstat-url]: https://david-dm.org/fissionjs/fission-router\r\n[depstat-image]: https://david-dm.org/fissionjs/fission-router.png\r\n\r\n[david-url]: https://david-dm.org/fissionjs/fission-router\r\n[david-image]: https://david-dm.org/fissionjs/fission-router.png?theme=shields.io\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}